/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendance;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class showReport extends javax.swing.JFrame {

    /**
     * Creates new form showReport
     */
    public showReport() {
        initComponents();
        setLocationRelativeTo(null);
        txtyear.setText(sklyr);
        combotype.setSelectedIndex(0);
        try {
            type = combotype.getSelectedItem().toString();    
            switch (type) {
                case "Attendance award":
                    reporttype = 1;
                    tableupdate(1);
                    break;
                case "Re-enrolment":
                    tableupdate(2);
                    reporttype = 2;
                    break;
                case "Full":
                    tableupdate(3);
                    reporttype = 3;
                    break;
                default:
                    break;
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(showReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs1;
    ResultSet rs2;
    static int reporttype;
    String sklyr = mainScreen.schoolYear;
    String type;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnback = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        combotype = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnexport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtyear = new javax.swing.JLabel();
        btnsettings = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Show Report");
        setMinimumSize(new java.awt.Dimension(613, 389));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 1000));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 353));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnback.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        jPanel1.add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 70, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Type:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 40, -1));

        combotype.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combotype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Attendance award", "Re-enrolment", "Full" }));
        combotype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotypeActionPerformed(evt);
            }
        });
        jPanel1.add(combotype, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 150, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Surname", "First name", "Class", "Percentage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(30);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(30);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(15);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(7);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(5);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 360, 330));

        btnexport.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnexport.setText("Export");
        btnexport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexportActionPerformed(evt);
            }
        });
        jPanel1.add(btnexport, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 80, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("School year:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 20));

        txtyear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(txtyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 110, 20));

        btnsettings.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnsettings.setText("Settings");
        btnsettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsettingsActionPerformed(evt);
            }
        });
        jPanel1.add(btnsettings, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 90, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public void tableupdate(int t) throws SQLException, ClassNotFoundException {
        //variables
        int c;
        int stuID = 1;
        int count = 0;
        int num = 1;
        int result;
        int value=0;
        String surname = null;
        String firstName = null;
        int clas = 0;
        String className = null;
        try {
            //total number of classes this year
            Class.forName("net.ucanaccess.jdbc.UcanaccessDriver"); 
            con = DriverManager.getConnection("jdbc:ucanaccess://C:/TakeAttendance/testdb.accdb");
            pst = con.prepareStatement("select num_of_class from school_calendar where school_year = ?");
            pst.setString(1, sklyr);
            rs1 = pst.executeQuery();
            while(rs1.next()){
                num = rs1.getInt("num_of_class");
            }
            //get jtable1 properties
            ResultSetMetaData rsd = rs1.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel)jTable1.getModel();
            dft.setRowCount(0);
            //calculate every student's attendance rate
            pst = con.prepareStatement("select * from student_info");
            rs1 = pst.executeQuery();
            while(rs1.next()){
                stuID = rs1.getInt("student_id"); //retrieve id of the student
                surname = rs1.getString("surname"); //retrieve surname of the student
                firstName = rs1.getString("first_name"); //retrieve first name of the student
                //get the number of attendance of the student
                pst = con.prepareStatement("select count(*) as count from attendance_log where student_id = ? and school_year = ? and late_flag = ?");
                pst.setInt(1, stuID);
                pst.setString(2, sklyr);
                pst.setInt(3, 0);
                rs2 = pst.executeQuery();
                while(rs2.next()){
                    count = rs2.getInt("count");
                }
                switch (t) {
                    //Attendance award
                    case 1:
                        //retrieve the percentage value from settings
                        pst = con.prepareStatement("select * from settings where option = ?");
                        pst.setString(1, "att");
                        rs2 = pst.executeQuery();
                        while(rs2.next()){
                            value = rs2.getInt("num");
                        }
                        //calculate percentage
                        result = (count*100) / num;
                        if(result >= value){
                            //retrieve class of student
                            pst = con.prepareStatement("select * from student_class where student_id = ? and school_year = ?");
                            pst.setInt(1, stuID);
                            pst.setString(2, sklyr);
                            rs2 = pst.executeQuery();
                            while(rs2.next()){
                                clas = rs2.getInt("class_id");
                            }
                            pst = con.prepareStatement("select * from class_info where class_id = ?");
                            pst.setInt(1, clas);
                            rs2 = pst.executeQuery();
                            while(rs2.next()){
                                className = rs2.getString("class_name");
                            }
                            Vector v2 = new Vector();
                            for(int i = 1; i<=c; i++){
                                v2.add(stuID);
                                v2.add(surname);
                                v2.add(firstName);
                                v2.add(className);
                                v2.add(result);
                            }
                            dft.addRow(v2);
                        }
                        break;
                    //Re-enrolment
                    case 2:
                        pst = con.prepareStatement("select * from settings where option = ?");
                        pst.setString(1, "ree");
                        rs2 = pst.executeQuery();
                        while(rs2.next()){
                            value = rs2.getInt("num");
                        }
                        result = (count*100) / num;
                        if(result >= value){
                            pst = con.prepareStatement("select * from student_class where student_id = ? and school_year = ?");
                            pst.setInt(1, stuID);
                            pst.setString(2, sklyr);
                            rs2 = pst.executeQuery();
                            while(rs2.next()){
                                clas = rs2.getInt("class_id");
                            }
                            pst = con.prepareStatement("select * from class_info where class_id = ?");
                            pst.setInt(1, clas);
                            rs2 = pst.executeQuery();
                            while(rs2.next()){
                                className = rs2.getString("class_name");
                            }
                            
                            Vector v2 = new Vector();
                            for(int i = 1; i<=c; i++){
                                v2.add(stuID);
                                v2.add(surname);
                                v2.add(firstName);
                                v2.add(className);
                                v2.add(result);
                            }
                            dft.addRow(v2);
                        }
                        break;
                    //Full
                    case 3:
                        result = (count*100)/num;
                        pst = con.prepareStatement("select * from student_class where student_id = ? and school_year = ?");
                        pst.setInt(1, stuID);
                        pst.setString(2, sklyr);
                        rs2 = pst.executeQuery();
                        while(rs2.next()){
                            clas = rs2.getInt("class_id");
                        }
                        pst = con.prepareStatement("select * from class_info where class_id = ?");
                        pst.setInt(1, clas);
                        rs2 = pst.executeQuery();
                        while(rs2.next()){
                            className = rs2.getString("class_name");
                        }
                        
                        Vector v2 = new Vector();
                        for(int i = 1; i<=c; i++){
                            v2.add(stuID);
                            v2.add(surname);
                            v2.add(firstName);
                            v2.add(className);
                            v2.add(result);
                        }
                        dft.addRow(v2);
                        break;
                    default:
                        break;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(showReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnexportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexportActionPerformed
        exportReport gui = new exportReport();
        gui.setVisible(true);
        gui.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnexportActionPerformed

    private void combotypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotypeActionPerformed
        try {
            type = combotype.getSelectedItem().toString();    
            switch (type) {
                case "Attendance award":
                    reporttype = 1;
                    tableupdate(1);
                    break;
                case "Re-enrolment":
                    tableupdate(2);
                    reporttype = 2;
                    break;
                case "Full":
                    tableupdate(3);
                    reporttype = 3;
                    break;
                default:
                    break;
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(showReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_combotypeActionPerformed

    private void btnsettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsettingsActionPerformed
        showReportSettings gui = new showReportSettings();
        gui.setVisible(true);
        gui.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnsettingsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(showReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(showReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(showReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(showReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new showReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnexport;
    private javax.swing.JButton btnsettings;
    private javax.swing.JComboBox<String> combotype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel txtyear;
    // End of variables declaration//GEN-END:variables
}
