/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendance;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang3.math.NumberUtils;
import java.sql.ResultSetMetaData;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFrame;

public class takeAttendance extends javax.swing.JFrame {

    /**
     * Creates new form takeAttendance
     * @throws java.sql.SQLException
     */
    public takeAttendance() throws SQLException {
        initComponents();
        setLocationRelativeTo(null);
        txtid.requestFocus();
        SimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");
        String stime = sdformat.format(new Date(System.currentTimeMillis()));
        txtdate.setText(stime);
        DefaultTableModel dft = (DefaultTableModel)jTable1.getModel();
        dft.setRowCount(0);
    }

    //variables
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    String sklyr = mainScreen.schoolYear;
    Queue<Integer> id1 = new LinkedList<>(); //id queue
    Queue<Integer> id2 = new LinkedList<>(); //temp id queue

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void tableupdate() {
        int size = id1.size();
        int head;
        int c;
        String d = java.time.LocalDate.now().toString();
        try {
            //get jtable1 properties
            ResultSetMetaData rsd = rs.getMetaData();
            c = rsd.getColumnCount();
            DefaultTableModel dft = (DefaultTableModel)jTable1.getModel();
            dft.setRowCount(0);
            //take the id numbers from the queue and put those students' information on the table
            for (int i=1; i <= size; i++){
                head = id1.remove();
                id2.add(head);
                Class.forName("net.ucanaccess.jdbc.UcanaccessDriver");
                con = DriverManager.getConnection("jdbc:ucanaccess://C:/TakeAttendance/testdb.accdb");
                //get surname and first name and chinese name
                String surname = null;                    
                String firstName = null;
                String chinName = null;
                pst = con.prepareStatement("select * from student_info where student_id = ?");
                pst.setInt(1, head);
                rs = pst.executeQuery();
                while(rs.next()){
                    surname = rs.getString("surname");
                    firstName = rs.getString("first_name");
                    chinName = rs.getString("chinese_name");
                }
                //get class
                String className = null;
                int classID = 0;
                pst = con.prepareStatement("select * from student_class where student_id = ? and school_year = ?");
                pst.setInt(1, head);
                pst.setString(2, sklyr);
                rs = pst.executeQuery();
                while(rs.next()){
                    classID = rs.getInt("class_id");
                }
                pst = con.prepareStatement("select * from class_info where class_id = ?");
                pst.setInt(1, classID);
                rs = pst.executeQuery();
                while(rs.next()){
                    className = rs.getString("class_name");
                }
                //get time
                String stime = null;
                pst = con.prepareStatement("select time from attendance_log where student_id = ? and attend_date = ?");
                pst.setInt(1, head);
                pst.setString(2, d);
                rs = pst.executeQuery();
                while(rs.next()){
                    stime = rs.getString("time");
                }
                //add a row to the table
                Vector v2 = new Vector();
                for(int j = 1; j<=c; j++){ 
                    v2.add(head);
                    v2.add(surname);
                    v2.add(firstName);
                    v2.add(chinName);
                    v2.add(className);
                    v2.add(stime);
                }
                dft.addRow(v2);
            }
            for (int i=1; i <= size; i++){
                id1.add(id2.remove()); //reset id1 queue
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(students.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btnback = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btndone = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnenter = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtdate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Take Attendance");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnback.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnback.setText("Back");
        btnback.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnbackMouseClicked(evt);
            }
        });
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        jPanel2.add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 30));

        jTable1.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Surname", "First name", "Chinese name", "Class", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 570, 190));

        btndone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btndone.setText("Done");
        btndone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoneActionPerformed(evt);
            }
        });
        jPanel2.add(btndone, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 90, 40));

        txtid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
        });
        jPanel2.add(txtid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 360, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Input student ID:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        btnenter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnenter.setText("Enter");
        btnenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenterActionPerformed(evt);
            }
        });
        jPanel2.add(btnenter, new org.netbeans.lib.awtextra.AbsoluteConstraints(491, 51, 90, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Today's date:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 90, 20));

        txtdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2.add(txtdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 110, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnbackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnbackMouseClicked
    }//GEN-LAST:event_btnbackMouseClicked

    private void btndoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoneActionPerformed
        dispose();
    }//GEN-LAST:event_btndoneActionPerformed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
       
    }//GEN-LAST:event_txtidActionPerformed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnenter.doClick();
        }   
    }//GEN-LAST:event_txtidKeyPressed

    private void btnenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenterActionPerformed
        try {
            //initialize variables
            JFrame jf=new JFrame();
            jf.setAlwaysOnTop(true);
            String id;
            int stuid = 0;
            Boolean exist = false;
            Boolean classFlag = false;
            Boolean numflag = false;
            Boolean took = false;
            int lateflag = 0; //late flag: late-1, on time-0
            //check if id is a number
            id = txtid.getText();
            numflag = NumberUtils.isDigits(id);
            //check if student id exists in database
            if(numflag){
                stuid = Integer.parseInt(id);
                con = DriverManager.getConnection("jdbc:ucanaccess://C:/TakeAttendance/testdb.accdb");
                pst = con.prepareStatement("select * from student_info where student_id = ?");
                pst.setInt(1, stuid);
                rs = pst.executeQuery();
                while(rs.next()){
                    if(rs.getInt("student_id") == stuid){
                        exist = true;
                    }
                }
            }
            //check if the student has a class
            if(exist){
                pst = con.prepareStatement("select * from student_class where school_year = ? and student_id = ?");
                pst.setString(1, sklyr);
                pst.setInt(2, stuid);
                rs = pst.executeQuery();
                while(rs.next()){
                    if(rs.getInt("class_id") > 0)
                        classFlag = true;
                }
            }
            LocalDate date = LocalDate.now(); //today's date (i.e. attend date)
            String d = date.toString(); //yyyy-mm-dd
            if(!numflag){
                JOptionPane.showMessageDialog(jf, "Please input an ID", "WARNING", JOptionPane.WARNING_MESSAGE);
            }else if(!exist){
                JOptionPane.showMessageDialog(jf, "Please input valid ID", "WARNING", JOptionPane.WARNING_MESSAGE);
            } else if(!classFlag){
                    JOptionPane.showMessageDialog(jf, "Student is not in a class", "WARNING", JOptionPane.WARNING_MESSAGE);                    
                } else {
                    //compare student arrival time and the late time
                    SimpleDateFormat sdformat2 = new SimpleDateFormat("HH:mm:ss");
                    Date onTime = sdformat2.parse("10:00:00"); //standard time
                    String stime = sdformat2.format(new Date(System.currentTimeMillis())); //convert time they arrive to string
                    Date time = sdformat2.parse(stime);
                    if (time.compareTo(onTime) > 0) {
                        lateflag = 1;
                    }
                    //add attendance to database
                    try {
                        pst = con.prepareStatement("insert into attendance_log(student_id,school_year,attend_date,time,late_flag)values(?,?,?,?,?)");
                        pst.setInt(1, stuid);
                        pst.setString(2, sklyr);
                        pst.setString(3, d);
                        pst.setString(4, stime);
                        pst.setInt(5, lateflag);
                        pst.executeUpdate();
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(jf, "Record has been taken", "WARNING", JOptionPane.WARNING_MESSAGE);
                        took = true;
                    }
                    if(!took) {
                        try{
                            //add school date to school_date database
                            pst = con.prepareStatement("insert into school_date(school_year,class_date)values(?,?)");
                            pst.setString(1, sklyr);
                            pst.setString(2, d);
                            pst.executeUpdate();
                        }catch(SQLException e){}
                        finally{
                            //change the queue
                            id1.add(stuid);
                            if (id1.size() == 11){
                                id1.poll();
                            }
                            tableupdate();
                        }
                    }
                }
                txtid.setText("");
                txtid.requestFocus();
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(takeAttendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnenterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(takeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(takeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(takeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(takeAttendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new takeAttendance().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(takeAttendance.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btndone;
    private javax.swing.JButton btnenter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel txtdate;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables
}
